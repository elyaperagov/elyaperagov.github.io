{"version":3,"sources":["TodoForm.js","TodoList.js","useLocalStorage.js","index.js"],"names":["TodoForm","_ref","saveTodo","_useState","useState","_useState2","Object","slicedToArray","value","setValue","react_default","a","createElement","onSubmit","event","preventDefault","TextField_default","variant","placeholder","margin","onChange","target","TodoList","todos","deleteTodo","List_default","map","todo","index","ListItem_default","key","toString","dense","button","Checkbox_default","tabIndex","disableRipple","ListItemText_default","primary","ListItemSecondaryAction_default","IconButton_default","aria-label","onClick","Delete_default","useLocalStorage","keyName","initialValue","values","keys","localStorage","i","length","push","getItem","getStorageData","App","_useLocalStorage","_useLocalStorage2","setTodos","className","Typography_default","component","src_TodoForm","todoText","trimmedText","trim","concat","toConsumableArray","setItem","src_TodoList","todoIndex","newTodos","filter","el","removeItem","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"8MAyBeA,EAvBE,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAAeC,EACPC,mBAAS,IADFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC1BK,EAD0BH,EAAA,GACnBI,EADmBJ,EAAA,GAGjC,OACEK,EAAAC,EAAAC,cAAA,QAAMC,SAAU,SAAAC,GACdA,EAAMC,iBACNb,EAASM,GACTC,EAAS,MAETC,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACEM,QAAQ,WACRC,YAAY,WACZC,OAAO,SACPC,SAAU,SAAAN,GACRL,EAASK,EAAMO,OAAOb,QAExBA,MAAOA,6HCWAc,EApBE,SAAArB,GAAA,IAAGsB,EAAHtB,EAAGsB,MAAOC,EAAVvB,EAAUuB,WAAV,OAChBd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,KACGY,EAAMG,IAAI,SAACC,EAAMC,GAAP,OAAkBlB,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAUmB,IAAKF,EAAMG,WAAYC,OAAK,EAACC,QAAM,GAC3EvB,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAUwB,UAAW,EAAGC,eAAa,IACnC1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAc2B,QAASX,IACpBjB,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,KACED,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CACG8B,aAAW,SACXC,QAAS,WACPlB,EAAWI,KAGblB,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,aCPCiC,UAAkB,SAACC,EAASC,GAAiB,IAAA3C,EAC9BC,mBAAS,WACjC,OAdmB,WAMnB,IAJF,IAAI2C,EAAS,GACbC,EAAO1C,OAAO0C,KAAKC,cACnBC,EAAIF,EAAKG,OAECD,KACJH,EAAOK,KAAMH,aAAaI,QAAQL,EAAKE,KAE3C,OAAOH,EAKAO,KAF+CjD,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAK1D,MAAO,CALmDE,EAAA,GAAAA,EAAA,MCLpDkD,EAAM,WAAM,IAAAC,EACUZ,IADVa,EAAAnD,OAAAC,EAAA,EAAAD,CAAAkD,EAAA,GACTjC,EADSkC,EAAA,GACFC,EADED,EAAA,GAGhB,OACE/C,EAAAC,EAAAC,cAAA,OAAK+C,UAAU,OACbjD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYkD,UAAU,KAAK5C,QAAQ,MAAnC,SAGAP,EAAAC,EAAAC,cAACkD,EAAD,CACI5D,SAAU,SAAA6D,GACV,IAAMC,EAAcD,EAASE,OACzBD,EAAYb,OAAS,GACvBO,EAAQ,GAAAQ,OAAA5D,OAAA6D,EAAA,EAAA7D,CAAKiB,GAAL,CAAYyC,KAEtBf,aAAamB,QAAQJ,EAAaA,MAGtCtD,EAAAC,EAAAC,cAACyD,EAAD,CAAU9C,MAAOA,EACfC,WAAY,SAAA8C,GACV,IAAMC,EAAWhD,EAAMiD,OAAO,SAACC,EAAI7C,GAAL,OAAeA,IAAU0C,IACvDZ,EAASa,GACTtB,aAAayB,WAAWnD,EAAM+C,SAOlCK,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOrE,EAAAC,EAAAC,cAACoE,EAAD,MAASL","file":"static/js/main.91fd4bdd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst TodoForm = ({ saveTodo }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  return (\r\n    <form onSubmit={event => {\r\n      event.preventDefault();\r\n      saveTodo(value);\r\n      setValue('');\r\n    }}>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        placeholder=\"Add todo\"\r\n        margin=\"normal\"\r\n        onChange={event => {\r\n          setValue(event.target.value);\r\n        }}\r\n        value={value}\r\n      />\r\n   </form>\r\n  );\r\n};\r\n\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst TodoList = ({ todos, deleteTodo}) => (\r\n <List>\r\n   {todos.map((todo, index) => (<ListItem key={index.toString()} dense button>\r\n  <Checkbox tabIndex={-1} disableRipple />\r\n    <ListItemText primary={todo}/>\r\n       <ListItemSecondaryAction>\r\n         <IconButton\r\n            aria-label=\"Delete\"\r\n            onClick={() => {\r\n              deleteTodo(index);\r\n            }}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n          </ListItemSecondaryAction>\r\n      </ListItem>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default TodoList;","import { useState } from \"react\";\r\n\r\nconst getStorageData = () =>{\r\n\r\n  var values = [],\r\n  keys = Object.keys(localStorage),\r\n  i = keys.length;\r\n\r\n    while ( i-- ) {\r\n        values.push( localStorage.getItem(keys[i]) );\r\n    }\r\n    return values;\r\n}\r\n\r\nexport const useLocalStorage = (keyName, initialValue) => {\r\n  const [value, setValue] = useState(() => {\r\n    return getStorageData(keyName, initialValue);\r\n  });\r\n\r\nreturn [value, setValue];\r\n}","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport './styles.css';\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\n\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useLocalStorage([]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Typography component=\"h1\" variant=\"h2\">\r\n        Todos\r\n      </Typography>\r\n      <TodoForm\r\n          saveTodo={todoText => {\r\n          const trimmedText = todoText.trim();\r\n          if (trimmedText.length > 0) {\r\n            setTodos([...todos, trimmedText]);\r\n          }\r\n          localStorage.setItem(trimmedText, trimmedText);\r\n        }}\r\n     />\r\n      <TodoList todos={todos}\r\n        deleteTodo={todoIndex => {\r\n          const newTodos = todos.filter((el, index) => index !== todoIndex);\r\n          setTodos(newTodos);\r\n          localStorage.removeItem(todos[todoIndex])\r\n        }}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}